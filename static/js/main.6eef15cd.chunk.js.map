{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","ref","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAkCeA,MAhCf,SAAkBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,KAEfC,EAAWC,iBAAO,MAgBxB,OAfAC,qBAAU,WACNF,EAASG,QAAQC,WAejB,8BACI,uBAAMC,UAAU,YAAYC,SAXf,SAAAC,GAEjBA,EAAEC,iBACFZ,EAAMU,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMf,IAEVC,EAAS,KAIL,UACI,uBAAOe,KAAK,OAAOC,YAAY,aAAaC,MAAOlB,EAAOmB,KAAK,OAAOZ,UAAU,aAC5Ea,SAhBK,SAAAX,GACjBR,EAASQ,EAAEY,OAAOH,QAgBNI,IAAKpB,IACT,wBAAQK,UAAU,cAAlB,0B,sBCUDgB,MAhCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACnC5B,mBAAS,CAC7BY,GAAI,KACJO,MAAO,KAHgD,mBACpDU,EADoD,KAC9CC,EAD8C,KAY3D,OAAID,EAAKjB,GACE,cAAC,EAAD,CAAUiB,KAAMA,EAAMpB,SARZ,SAAAU,GACjBS,EAAWC,EAAKjB,GAAIO,GACpBW,EAAQ,CACJlB,GAAI,KACJO,MAAO,QAMRM,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKzB,UAAWwB,EAAKE,WAAa,oBAAsB,WAAxD,UAEI,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKpB,KAApD,SACKoB,EAAKhB,MADAgB,EAAKpB,IAGf,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CAAmB2B,QAAS,kBAAMR,EAAWK,EAAKpB,KAC9CJ,UAAU,gBACd,cAAC,IAAD,CAAQ2B,QAAS,kBAAML,EAAQ,CAAElB,GAAIoB,EAAKpB,GAAIO,MAAOa,EAAKhB,QACtDR,UAAU,mBARbyB,OC0BFG,MA3Cf,WAAqB,IAAD,EACUpC,mBAAS,IADnB,mBACTyB,EADS,KACFY,EADE,KA8BhB,OACI,gCACI,qDACA,cAAC,EAAD,CAAU5B,SA/BF,SAAAuB,GACZ,GAAKA,EAAKhB,OAAQ,QAAQsB,KAAKN,EAAKhB,MAApC,CAGA,IAAMuB,EAAQ,CAAIP,GAAJ,mBAAaP,IAC3BY,EAASE,OA2BL,cAAC,EAAD,CACId,MAAOA,EACPC,aAfS,SAAAd,GACjB,IAAI4B,EAAef,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKpB,KAAOA,IACZoB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASG,IASDb,WA1BO,SAAAf,GACf,IAAM6B,EAAY,YAAIhB,GAAOiB,QAAO,SAAAV,GAAI,OAAIA,EAAKpB,KAAOA,KACxDyB,EAASI,IAyBDb,WAvBO,SAACe,EAAQC,GACnBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAG5CqB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAIA,EAAKlC,KAAO+B,EAASC,EAAWE,eCV3DC,MARf,WACE,OACE,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6eef15cd.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(\"\");\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    })\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n    const handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n        setInput('');\r\n    };\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Add a todo\" value={input} name=\"text\" className=\"todo-input\"\r\n                    onChange={handleChange}\r\n                    ref={inputRef} />\r\n                <button className=\"todo-button\">Add to</button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n    });\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\r\n            key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)}\r\n                    className=\"delete-icon\" />\r\n                <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className=\"edit-icon\" />\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n}\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n        setTodos(removeArr);\r\n    };\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\r\n    }\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n    return (\r\n        <div>\r\n            <h1 >Make plan for today</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}\r\n                completeTodo={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}